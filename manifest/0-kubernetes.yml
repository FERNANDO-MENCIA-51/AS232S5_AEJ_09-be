# consultar versión de minikube
minikube version

# consultar si minikube esta en start o stop
minikube status

# iniciar clúster kubernetes
minikube start

# ingresar a la carpeta de los manifiestos de kubernetes (manifest)
cd manifest

# listar namespace
kubectl get namespace
kubectl get ns

# crear un namespace "apis-ai-demos" por comando mediante un archivo: "1-namespace.yml"
kubectl apply -f 1-namespace.yml

# consultar namespace en uso por "default" | LINUX
kubectl config view --minify | grep namespace

# consultar namespace en uso por "default" | WINDOWS
kubectl config view --minify | findstr namespace

# cambiar un namespace en uso por "default" a "apis-ai-demos"
kubectl config set-context --current --namespace=apis-ai-demos

# crear un secret "credentials" dentro del namespace "apis-ai-demos" por comando mediante un archivo: "2-secret.yml"
kubectl apply -f 2-secret.yml

# crear un service "apis-ai-demos" dentro del namespace "apis-ai-demos" por comando mediante un archivo: "3-service.yml"
kubectl apply -f 3-service.yml

# crear un deployment "apis-ai-demos" dentro del namespace "apis-ai-demos" por comando mediante un archivo: "4-deployment.yml"
kubectl apply -f 4-deployment.yml

# consultar todos los recursos de un namespace "apis-ai-demos"
kubectl get all -n apis-ai-demos

# consultar todos los recursos y secret de un namespace "apis-ai-demos"
kubectl get all,secrets -n apis-ai-demos

# listar services del namespace "apis-ai-demos"
minikube service apis-ai-demos -n apis-ai-demos
minikube service list

# probar el microservicio dentro del clúster con curl
curl http://192.168.49.2:30001/swagger-ui.html
curl http://192.168.49.2:30001/v3/api-docs

# crear un túnel de puerto la máquina local (host) y el clúster de Kubernetes
kubectl port-forward service/age-detector-be 8085:30001

# ver los logs del pod (logs del proyecto)
kubectl logs nombre-pod